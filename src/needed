import Login from "./components/Login";
import Register from "./components/Register";

{
    currentForm === "login" ? <Login/> : <Register/>
}

const [formData, setFormData]= useState({
    username: '',
    email: '',
    passwaord: '',
    cornfirmPassword: '',
})


const [errors, setErrors] = useState({})

const handleChange = (e) => {
    const {username, value} = e.target;
    setFormData({
        ...formData, [username] : value
    })
}

const handleSubmit = (e) => {
    e.preventDefault();
    const validationErrors = {}
    if(!formData.username.trim()) {
        validationErrors.username= "username is required"
    }

    if(!formData.email.trim()) {
        validationErrors.email= "email is required"
    } else if (!/\S+@\.S\.\S+/.test(formData.email)){
        validationErrors.email= "email is not valid"
    }

    
    if(!formData.password.trim()) {
        validationErrors.password= "password is required"
    } else if (formData.password.length < 8){
        validationErrors.password= "password should be at least 8 characters"
    }

    if(formData.cornfirmPassword !== formData.passwaord) {
        validationErrors.cornfirmPassword = "password does not match"
    }

    setErrors(validationErrors)

    if(Object.keys(validationErrors).length === 0){
        alert("Registered Successfully")
    }
}




{
    curentForm === "login" ? <Login onFormSwitch={toggleForm} /> : <Register onFormSwitch={toggleForm} />
   }


.App {
align-items: center;
background:rgb(177, 167, 141) ;
display: flex;
justify-content: center;
text-align: center;
min-height: 100vh;
}